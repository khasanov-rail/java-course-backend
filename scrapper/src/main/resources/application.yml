app:
  scheduler:
    enable: true
    interval: 1h
    force-check-delay: 1h
  database-access-type: jpa # jdbc, jpa

spring:
  application:
    name: scrapper
  datasource:
    url: jdbc:postgresql://localhost:5432/scrapper
    username: postgres
    password: postgres
  liquibase:
    enabled: false
  cache:
    cache-names:
      - rate-limit-buckets-scrapper
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=3600s
  kafka:
    consumer:
      properties:
        session.timeout.ms: 30000
        max.poll.interval.ms: 300000
    topic: updates
    bootstrap-servers: localhost:29091
    use-queue: true
  jpa:
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    database: postgresql
    database-platform:

bucket4j:
  enabled: true
  filters:
    - cache-name: rate-limit-buckets-scrapper
      url: .*
      http-status-code: TOO_MANY_REQUESTS
      http-response-body: "{ \"description\": \"Too many requests\", \"code\": \"429 TOO MANY REQUESTS\" }"
      rate-limits:
        - cache-key: getRemoteAddr()
          bandwidths:
            - capacity: 60
              time: 1
              unit: minutes


server:
  port: 8080

logging:
  config: classpath:log4j2-plain.xml

api:
  git-hub:
    default-url: https://api.github.com
  stackoverflow:
    default-url: https://api.stackexchange.com/2.3
  bot:
    base-url: http://localhost:8090

springdoc:
  swagger-ui:
    path: /swagger-ui

retry:
  max-attempts: 1
  strategy: const # const, exp
  delay: 10000
  status-code: INTERNAL_SERVER_ERROR, TOO_MANY_REQUESTS, BAD_GATEWAY, GATEWAY_TIMEOUT, SERVICE_UNAVAILABLE, FORBIDDEN

management:
  server:
    port: 8081

  metrics:
    tags:
      application: ${spring.application.name}
    processed-updates:
      name: processed_updates_count

  endpoints:
    web:
      base-path: /
      exposure:
        include:
          - info
          - health
          - prometheus
      path-mapping:
        prometheus: metrics

  prometheus:
    metrics:
      export:
        enabled: true
